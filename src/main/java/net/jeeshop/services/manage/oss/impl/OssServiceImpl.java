package net.jeeshop.services.manage.oss.impl;import java.io.File;import java.io.IOException;import java.util.List;import javax.annotation.Resource;import net.jeeshop.core.ServersManager;import net.jeeshop.core.util.QiniuUtil;import net.jeeshop.services.manage.oss.OssService;import net.jeeshop.services.manage.oss.bean.AliyunOSS;import net.jeeshop.services.manage.oss.bean.Oss;import net.jeeshop.services.manage.oss.bean.QiniuOSS;import net.jeeshop.services.manage.oss.dao.OssDao;import org.springframework.stereotype.Service;import com.alibaba.fastjson.JSON;@Service("ossServiceManage")public class OssServiceImpl extends ServersManager<Oss, OssDao> implements OssService {    @Resource(name = "ossDaoManage")    @Override    public void setDao(OssDao ossDao) {        this.dao = ossDao;    }        @Override    public void upload(String filePath, String key){    	Oss e = new Oss();    	List<Oss> list = this.dao.selectList(e);    	e = list.get(0);    	if(Oss.code_qiniu.equals(e.getCode())){    		QiniuUtil qiniuUil = new QiniuUtil();    		try {				qiniuUil.uploadByPath(filePath, key, false);			} catch (IOException e1) {				e1.printStackTrace();			}    	}    		    	if(Oss.code_aliyun.equals(e.getCode())){    		AliyunOSS aliyunOSS = e.getAliyunOSS();    		System.out.println(aliyunOSS.getBucketName());    	}    	    	    }    @Override    public void upload(byte[] fileByte, String key){    	Oss e = new Oss();    	List<Oss> list = this.dao.selectList(e);    	e = list.get(0);    	    	if(Oss.code_qiniu.equals(e.getCode())){    		QiniuOSS qiniuOSS = JSON.parseObject(e.getOssJsonInfo(), QiniuOSS.class);    		if(qiniuOSS==null){    			throw new RuntimeException("七牛OSS的配置信息错误！");    		}    		    		QiniuUtil qiniuUil = new QiniuUtil();    		try {    			qiniuUil.uploadByByte(fileByte, key, false);    		} catch (IOException e1) {    			e1.printStackTrace();    		}    	}    	    	if(Oss.code_aliyun.equals(e.getCode())){    		AliyunOSS aliyunOSS = JSON.parseObject(e.getOssJsonInfo(), AliyunOSS.class);    		if(aliyunOSS==null){    			throw new RuntimeException("阿里云OSS的配置信息错误！");    		}    		System.out.println(aliyunOSS.getBucketName());    	}    	    	    }    @Override    public void upload(File file, String key){    	Oss e = new Oss();    	List<Oss> list = this.dao.selectList(e);    	e = list.get(0);    	    	if(Oss.code_qiniu.equals(e.getCode())){    		QiniuUtil qiniuUil = new QiniuUtil();    		try {    			qiniuUil.uploadByFile(file, key, false);    		} catch (IOException e1) {    			e1.printStackTrace();    		}    	}    	    	if(Oss.code_aliyun.equals(e.getCode())){    		AliyunOSS aliyunOSS = e.getAliyunOSS();    		System.out.println(aliyunOSS.getBucketName());    	}    	    	    }}